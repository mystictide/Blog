@model Blog.Web.Models.ContactView

@{
    int State = 0;
    if (TempData["state"] != null)
    {
        State = (int)TempData["state"];
    }
}

<main class="mb-4">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <p>Want to get in touch? Fill out the form below to send me a message and I will get back to you as soon as possible!</p>
                <div class="my-5">
                    <form id="contactForm" method="post" action="/contact">
                        <div class="form-floating">
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Enter your name..." })
                            <label for="Name">@Lang.Global.Name</label>
                            @Html.ValidationMessageFor(model => model.Name, Lang.Global.Required, new { @class = "invalid-feedback" })
                        </div>
                        <div class="form-floating">
                            @Html.TextBoxFor(model => model.Mail, new { @class = "form-control", placeholder = "Enter your email..." })
                            <label for="Mail">@Lang.Global.Mail</label>
                            @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "invalid-feedback" })
                        </div>
                        <div class="form-floating">
                            @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @type = "tel", placeholder = "Enter your phone number..." })
                            <label for="Phone">@Lang.Global.Phone</label>
                        </div>
                        <div class="form-floating">
                            @Html.TextAreaFor(model => model.Message, new { @class = "form-control", @type = "tel", placeholder = "Enter your message here...", @Style = "height: 12rem" })
                            <label for="Message">@Lang.Global.Message</label>
                            @Html.ValidationMessageFor(model => model.Message, Lang.Global.Required, new { @class = "invalid-feedback" })
                        </div>
                        <br />
                        @if (State == 1)
                        {
                            <div class="d-block" id="submitSuccessMessage">
                                <div class="text-center mb-3">
                                    <div class="fw-bolder">@Lang.Global.FormSubmitted</div>
                                </div>
                            </div> }
                        else if (State == 2)
                        {
                            <div class="d-block" id="submitErrorMessage"><div class="text-center text-danger mb-3">@Lang.Global.FormNotSubmitted</div></div>}


                        <button class="btn btn-primary text-uppercase" id="submitButton" type="submit">@Lang.Global.Send</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</main>
@section customScripts{
    <script src="~/Content/plugins/jquery/js/jquery-3.6.0.min.js"></script>
    <script src="~/Content/plugins/jqueryui/js/jquery-ui.min.js"></script>
    <script src="~/Content/plugins/validate/js/jquery.validate.min.js"></script>
    <script src="~/Content/plugins/validate/js/jquery.validate.unobtrusive.js"></script>
    <script src="~/Content/plugins/validate/js/jquery.validate.overrides.js"></script>
    <script src="~/Content/plugins/mask/js/jquery.mask.js"></script>
    <script>
        $("#Phone").mask("9(999) 999 99 99");
    </script>
}
